@model LibraryASP.ViewModels.PaginatedResultViewModel<LibraryASP.Models.Book>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Books",FormMethod.Get))
{
    <div class="d-flex">
        @Html.HiddenFor(model => model.page)
        <input class="form-control" name="search" value="@Model.search">
        <input type="submit" value="Cerca" class="btn btn-primary" />
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.results[0].Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.results[0].Author)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.results[0].Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.results[0].Category.Name)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.results) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.ActionLink("Modifica", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Dettaglio", "Details", new { id=item.Id }) |
            @Html.ActionLink("Elimina", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
<ul class="pagination">
    @for (int i = 1; i <= Model.pages; i++)
    {
        <li class="page-item @( i==Model.page ? "active" : "" )"> @Html.ActionLink(i.ToString(), "Index", new { page = i, search=Model.search }, new { @class = "page-link" }) </li>
    }
</ul>